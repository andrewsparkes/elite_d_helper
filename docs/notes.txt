notes

# =====

EDS star data
# Add data controller to allow adding/updating all systems in radius around sol
use javascript and submit list to controller function

# check for existance of system by eds_id
# if system exists
#     check for coordinates and update if not matching
# else
#     insert system (name, coords, eds_id, 'unexplored' for allegiance)
# end
# report view shows what was done (collect array of insert/update messages)

# system model add self.distance_between(system_name_A, system_name_B)
# return -1 if no coords in one or both systems

# can now do clever stuff like trade routes with distance legs < X ly

# =====
Station commodities:

* change table to have separate fields for buy price, sell price, demand vol, demand level, supply vol, supply level? compatible with OCR
* remember last settings for D/S and L/M/H
* on station show it would be better if 'add details' rows were all split into a second table underneath the main table

# =====

Add 'last updated' date for commodities in all trade route screens

# =====

* trades view needs visible options:
	- max loop distance
	- maz station nav ls
	- min leg profit
	- min loop profit

* trades view needs more info:
	- buy and sell prices for the commodities
	- amounts available/wanted
	- order by shortest distance, then by shortest nav ls

# =====

Add pilots journal to track system, station, money spent and gained with reason (trade, outfitting module, ship, bounty, death, explorer fee, bond, etc.), comments.
Allow entry of balance as milestone point to calculate from.
View in scrolling window. Display current balance. Display total assets owned in ships (-10% cost) and modules?

# =====

Organise 'reports' screen
    - move/copy 'view all buyers' form in station view to reports screen

Create 'import data' screen
    - move import EDS star data here
    - move import OCR file here

# =====

Image for main screen
Image for behind navigation menu

# =====